# Generated by Django 2.0.5 on 2022-01-28 14:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(max_length=11, verbose_name='手机号')),
                ('operator_id', models.CharField(max_length=20, null=True, unique=True, verbose_name='工号')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='female', max_length=6, verbose_name='性别')),
                ('station', models.CharField(choices=[('general_staff', '普通员工'), ('group_leader', '组长'), ('squad_leader', '班长'), ('g_squad_leader', '大班长')], default='general_staff', max_length=30, verbose_name='岗位')),
                ('star_level', models.CharField(choices=[('one_star', '1星'), ('two_star', '2星'), ('three_star', '3星'), ('four_star', '4星'), ('five_star', '5星'), ('six_star', '6星')], default='one_star', max_length=30, verbose_name='星级')),
                ('max_night_shift', models.IntegerField(null=True, verbose_name='一周最多能上的晚班数')),
                ('vacate', models.BooleanField(default=False, verbose_name='是否处于请假状态')),
                ('is_spe_seat', models.BooleanField(default=False, verbose_name='是否专席')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': '员工信息',
                'verbose_name_plural': '员工信息',
                'db_table': 'user_info',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClassInfo',
            fields=[
                ('class_name', models.CharField(max_length=30, null=True, unique=True, verbose_name='班名')),
                ('class_id', models.AutoField(primary_key=True, serialize=False, verbose_name='班id')),
                ('class_leader_id', models.IntegerField(unique=True, verbose_name='班长id')),
                ('class_leader_name', models.CharField(max_length=30, verbose_name='班长名')),
                ('class_count', models.IntegerField(default=0, verbose_name='班级人数')),
            ],
            options={
                'verbose_name': '班级信息',
                'verbose_name_plural': '班级信息',
                'db_table': 'class_info',
            },
        ),
        migrations.CreateModel(
            name='GroupInfo',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False, verbose_name='组id')),
                ('group_name', models.CharField(max_length=30, verbose_name='组名')),
                ('group_leader_id', models.IntegerField(null=True, unique=True, verbose_name='组长id')),
                ('group_leader_name', models.CharField(max_length=30, verbose_name='组长名字')),
                ('group_count', models.IntegerField(default=0, verbose_name='小组人数')),
                ('group_category', models.CharField(choices=[('new_staff', '新员工班组'), ('old_staff', '非新员工班组'), ('other', '其他')], max_length=30, verbose_name='小组类型')),
                ('group_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_members', to='user.ClassInfo', verbose_name='所属班')),
            ],
            options={
                'verbose_name': '小组信息',
                'verbose_name_plural': '小组信息',
                'db_table': 'group_info',
            },
        ),
        migrations.CreateModel(
            name='SkillTable',
            fields=[
                ('skill_id', models.AutoField(primary_key=True, serialize=False, verbose_name='技能id')),
                ('skill_name', models.CharField(max_length=30, unique=True, verbose_name='技能名称')),
            ],
            options={
                'verbose_name': '技能',
                'verbose_name_plural': '技能',
                'db_table': 'skill_table',
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.SkillTable', verbose_name='技能')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='员工')),
            ],
            options={
                'verbose_name': '员工-技能表',
                'verbose_name_plural': '员工-技能表',
                'db_table': 'user_skill',
            },
        ),
        migrations.AddField(
            model_name='userinfo',
            name='user_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_member', to='user.GroupInfo'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
